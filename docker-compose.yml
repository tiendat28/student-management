version: '3.7'

services:

  frontend:
    container_name: my_web_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - './frontend:/app/frontend'
      - './frontend/node_modules:/app/frontend/node_modules'
    ports:
      - '80:3000'
      - '24678:24678'
    command: ['node', '.output/server/index.mjs']

  backend:
    container_name: my_web__backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - ./backend:/app/backend
    ports:
      - "1001:1001"
    depends_on:
      - db
#        - redis
    entrypoint: [ "poetry", "run" ]
    command: [ "uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "1001" ]

  db:
    container_name: my_web_db
    image: postgres:11
    ports:
      - "1002:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=default
    volumes:
      - db:/var/lib/postgresql/data

#  redis:
#    container_name: ${PROJECT_NAME}_redis
#    image: redis:alpine
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis:/data

volumes:
  db:
    driver: local
#  redis:
#    driver: local
